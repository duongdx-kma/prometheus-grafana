---
#######################################
# install and configure firewalld 
#######################################
- name: instal 
  yum:
    name: firewalld
    state: present
    update_cache: yes
  when: ansible_distribution == "CentOS"

- name: start firewalld
  service:
    name: firewalld
    state: started
    enabled: yes

- name: expose {{ port_expose_for_prometheus }}/tcp for prometheus pulling metrics
  firewalld:
    zone: public
    port: "{{ port_expose_for_prometheus }}/tcp"
    permanent: true
    state: enabled
  notify: restart firewalld

- name: expose {{ blackbox_exporter_port }}/tcp for prometheus pulling metrics
  firewalld:
    zone: public
    port: "{{ blackbox_exporter_port }}/tcp"
    permanent: true
    state: enabled
  notify: restart firewalld

#######################################
# install telegraf on host machine
#######################################
- name: download rpm packages
  get_url:
    url: "https://dl.influxdata.com/telegraf/releases/telegraf-{{ telegraf_version }}.rpm"
    dest: "/tmp/telegraf-{{ telegraf_version }}.rpm"
    mode: 0755
  when: ansible_distribution == "CentOS"

- name: install telegraf
  yum:
   name: "/tmp/telegraf-{{ telegraf_version }}.rpm"
   state: present
  when: ansible_distribution == "CentOS"

- name: passing telegraf configuration file
  template:
    src: telegraf.conf.j2
    dest: /etc/telegraf/telegraf.conf
    mode: 0644

- name: started telegraf
  service:
    name: telegraf
    state: started
    enabled: yes
  notify: restart telegraf-slave

#######################################
# install blackbox exporter on host machine
#######################################
# https://github.com/cloudalchemy/ansible-blackbox-exporter/blob/master
- name: create blackbox_exporter system group
  group:
    name: blackbox-exporter
    system: true
    state: present

- name: create blackbox_exporter system user
  user:
    name: blackbox-exporter
    system: true
    shell: "/usr/sbin/nologin"
    group: blackbox-exporter
    createhome: false

- name: debug
  debug:
    msg: "https://github.com/prometheus/blackbox_exporter/releases/download/v{{ blackbox_exporter_version }}/blackbox_exporter-{{ blackbox_exporter_version }}.linux-{{ architecture }}.tar.gz"

- name: Unarchive a file that is already on the remote machine
  ansible.builtin.unarchive:
    src: "https://github.com/prometheus/blackbox_exporter/releases/download/v{{ blackbox_exporter_version }}/blackbox_exporter-{{ blackbox_exporter_version }}.linux-{{ architecture }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/blackbox_exporter-{{ blackbox_exporter_version }}.linux-{{ architecture }}/blackbox_exporter"
    remote_src: yes
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  check_mode: false

- name: create blackbox_exporter folder
  file: 
    name: /etc/blackbox
    state: directory
    mode: 0750
    owner: blackbox-exporter
    group: blackbox-exporter

- name: passing blackbox_exporter config
  template:
    src: blackbox.j2
    dest: /etc/blackbox/blackbox.yml
    mode: 0750
    owner: blackbox-exporter
    group: blackbox-exporter

- name: propagate blackbox exporter binary
  copy:
    src: "/tmp/blackbox_exporter-{{ blackbox_exporter_version }}.linux-{{ architecture }}/blackbox_exporter"
    dest: "/usr/local/bin/blackbox_exporter"
    mode: 0750
    owner: blackbox-exporter
    group: blackbox-exporter
    remote_src: true

- name: create blackbox service
  template: 
    src: blackbox.service.j2
    dest: /etc/systemd/system/blackbox.service
    owner: root
    group: root
    mode: 0644

- name: ALLOW blackbox PING - ICMP protocol
  shell: sudo setcap cap_net_raw+ep /usr/local/bin/blackbox_exporter
  notify: restart blackbox exporter

- name: restart blackbox exporter
  systemd:
    daemon_reload: true
    name: blackbox
    state: restarted
    enabled: yes
