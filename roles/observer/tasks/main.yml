---
#######################################
# install and configure firewalld
#######################################
- name: install
  yum:
    name: firewalld
    state: present
    update_cache: yes
  when: ansible_distribution == "CentOS"

- name: start firewalld
  service:
    name: firewalld
    state: started
    enabled: yes

- name: expose prometheus port
  firewalld:
    zone: public
    port: "9090/tcp"
    permanent: true
    state: enabled
  notify: restart firewalld

- name: expose grafana port
  firewalld:
    zone: public
    port: "3000/tcp"
    permanent: true
    state: enabled
  notify: restart firewalld

- name: expose alertmanager port
  firewalld:
    zone: public
    port: "9093/tcp"
    permanent: true
    state: enabled
  notify: restart firewalld

#######################################
# install and update pip
#######################################
- name: Update YUM cache
  yum:
    name: '*'
    state: latest

- name: install python-pip
  yum:
    name: python-docker
    state: present
#######################################
# tasks file for observer
#######################################
- name: Create Folder /srv/prometheus if not exist
  file:
    path: /srv/prometheus
    mode: 0755
    state: directory

- name: Create Folder /srv/grafana if not exist
  file:
    path: /srv/grafana
    mode: 0755
    state: directory

- name: Create Folder /srv/alertmanager if not exist
  file:
    path: /srv/alertmanager
    mode: 0755
    state: directory

# tasks for passing configuation files to server
- name: passing prometheus rules folder to server
  copy:
    src: prometheus/rules/
    dest: /srv/prometheus/rules
    mode: 0644

- name: Create grafana configuration files
  copy:
    dest: /srv/
    src:  "grafana"
    mode: 0644

- name: Create alertmanager configuration file
  template:
    dest: /srv/alertmanager/alertmanager.yml
    src: "alertmanager.j2"
    mode: 0644

#######################################
# override configuration
#######################################
- name: override grafana datasources
  template:
    dest: /srv/grafana/provisioning/datasources/all.yml
    src: "grafana_data_sources.j2"
    mode: 0644

- name: override prometheus configuration
  template:
    dest: /srv/prometheus/prometheus.yml
    src: "prometheus_main.j2"
    mode: 0644

#######################################
# start docker containers
#######################################
- name: Create Prometheus container
  docker_container:
    name: prometheus
    restart_policy: always
    image: prom/prometheus:{{ prometheus_version }}
    volumes:
      - /srv/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /srv/prometheus/rules:/etc/prometheus/rules
      - prometheus_main_data:/prometheus
    command: >
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/etc/prometheus/console_libraries
      --web.console.templates=/etc/prometheus/consoles
      --web.enable-lifecycle
    env:
      TZ: "Asia/Ho_Chi_Minh"
    published_ports: "9090:9090"

- name: Create Grafana container
  docker_container:
    name: grafana
    restart_policy: always
    image: grafana/grafana:{{ grafana_version}}
    volumes:
      - grafana-data:/var/lib/grafana
      - /srv/grafana/provisioning:/etc/grafana/provisioning
      - /srv/grafana/dashboards:/var/lib/grafana/dashboards
    env:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      TZ: "Asia/Ho_Chi_Minh"
    published_ports: "3000:3000"

- name: Create Alertmanager container
  docker_container:
    name: alertmanager
    restart_policy: always
    image: prom/alertmanager:{{ alertmanager_version }}
    volumes:
      - alertmanager-data:/data
      - /srv/alertmanager:/config
    command: >
      --config.file=/config/alertmanager.yml 
      --log.level=debug
    env:
      TZ: "Asia/Ho_Chi_Minh"
    published_ports: "9093:9093"